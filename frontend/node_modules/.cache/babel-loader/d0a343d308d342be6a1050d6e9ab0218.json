{"ast":null,"code":"import axios from 'axios';\nconst PATH = '/api/users';\nexport const loginUser = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch({\n      type: 'USER_AUTH_REQUEST'\n    });\n    const {\n      data\n    } = await axios.post(`${PATH}/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: 'USER_AUTH_SUCCESS',\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: 'USER_AUTH_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: 'USER_LOGOUT'\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    dispatch({\n      type: 'USER_AUTH_REQUEST'\n    });\n    const {\n      data\n    } = await axios.post(`${PATH}/register`, {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: 'USER_AUTH_SUCCESS',\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: 'USER_AUTH_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserProfile = id => async (dispatch, getState) => {\n  const {\n    userApp: {\n      user\n    }\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user.token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: 'USER_DETAILS_REQUEST'\n    });\n    const {\n      data\n    } = await axios.get(`${PATH}/${id}`, config);\n    dispatch({\n      type: 'USER_DETAILS_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'USER_DETAILS_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = updatedUser => async (dispatch, getState) => {\n  const {\n    userApp: {\n      user\n    }\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user.token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: 'USER_UPDATE_PROFILE_REQUEST'\n    });\n    const {\n      data\n    } = await axios.put(`${PATH}/profile`, updatedUser, config);\n    dispatch({\n      type: 'USER_UPDATE_PROFILE_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'USER_UPDATE_PROFILE_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/21620/Desktop/Sports t-shirts/frontend/src/store/user/actions.js"],"names":["axios","PATH","loginUser","email","password","dispatch","config","headers","type","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logoutUser","removeItem","register","name","getUserProfile","id","getState","userApp","user","Authorization","token","get","updateUserProfile","updatedUser","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\nconst PATH = '/api/users';\n\nexport const loginUser = (email, password) => async (dispatch) => {\n  const config = { headers: { 'Content-Type': 'application/json' } };\n  try {\n    dispatch({ type: 'USER_AUTH_REQUEST' });\n    const { data } = await axios.post(\n      `${PATH}/login`,\n      { email, password },\n      config\n    );\n    dispatch({ type: 'USER_AUTH_SUCCESS', payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: 'USER_AUTH_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: 'USER_LOGOUT' });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  const config = { headers: { 'Content-Type': 'application/json' } };\n  try {\n    dispatch({ type: 'USER_AUTH_REQUEST' });\n    const { data } = await axios.post(\n      `${PATH}/register`,\n      { name, email, password },\n      config\n    );\n    dispatch({ type: 'USER_AUTH_SUCCESS', payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: 'USER_AUTH_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserProfile = (id) => async (dispatch, getState) => {\n  const {\n    userApp: { user },\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user.token}`,\n    },\n  };\n  try {\n    dispatch({ type: 'USER_DETAILS_REQUEST' });\n    const { data } = await axios.get(`${PATH}/${id}`, config);\n    dispatch({ type: 'USER_DETAILS_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'USER_DETAILS_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (updatedUser) => async (\n  dispatch,\n  getState\n) => {\n  const {\n    userApp: { user },\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user.token}`,\n    },\n  };\n  try {\n    dispatch({ type: 'USER_UPDATE_PROFILE_REQUEST' });\n    const { data } = await axios.put(`${PATH}/profile`, updatedUser, config);\n    dispatch({ type: 'USER_UPDATE_PROFILE_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'USER_UPDATE_PROFILE_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}