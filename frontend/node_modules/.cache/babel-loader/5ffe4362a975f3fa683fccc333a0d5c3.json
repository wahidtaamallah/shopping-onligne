{"ast":null,"code":"import axios from 'axios';\nconst PATH = '/api/orders';\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  const {\n    userApp: {\n      user\n    }\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user.token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: 'ORDER_PAY_REQUEST'\n    });\n    const {\n      data\n    } = await axios.put(`${PATH}/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: 'ORDER_PAY_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ORDER_PAY_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payReset = () => async dispatch => {\n  dispatch({\n    type: 'ORDER_PAY_RESET'\n  });\n};","map":{"version":3,"sources":["C:/Users/21620/Desktop/Sports t-shirts/frontend/src/store/paypal/actions.js"],"names":["axios","PATH","payOrder","orderId","paymentResult","dispatch","getState","userApp","user","config","headers","Authorization","token","type","data","put","payload","error","response","message","payReset"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,IAAI,GAAG,aAAb;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,aAAV,KAA4B,OAClDC,QADkD,EAElDC,QAFkD,KAG/C;AACH,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AADL,MAEFF,QAAQ,EAFZ;AAGA,QAAMG,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASH,IAAI,CAACI,KAAM;AAF7B;AADI,GAAf;;AAMA,MAAI;AACFP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,GAAN,CACpB,GAAEd,IAAK,IAAGE,OAAQ,MADE,EAErBC,aAFqB,EAGrBK,MAHqB,CAAvB;AAKAJ,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,mBAAR;AAA6BG,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACD,GARD,CAQE,OAAOG,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,gBADC;AAEPG,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA9BM;AAgCP,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOf,QAAP,IAAoB;AAChDA,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACD,CAFM","sourcesContent":["import axios from 'axios';\nconst PATH = '/api/orders';\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  const {\n    userApp: { user },\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user.token}`,\n    },\n  };\n  try {\n    dispatch({ type: 'ORDER_PAY_REQUEST' });\n    const { data } = await axios.put(\n      `${PATH}/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n    dispatch({ type: 'ORDER_PAY_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'ORDER_PAY_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payReset = () => async (dispatch) => {\n  dispatch({ type: 'ORDER_PAY_RESET' });\n};\n"]},"metadata":{},"sourceType":"module"}