{"ast":null,"code":"import axios from 'axios';\nconst PATH = '/api/products';\nexport const updateProduct = productData => async (dispatch, getState) => {\n  const {\n    userApp: {\n      user\n    }\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user === null || user === void 0 ? void 0 : user.token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: 'PRODUCT_UPDATE_REQUEST'\n    });\n    const {\n      data\n    } = await axios.put(`${PATH}/${productData._id}`, productData, config);\n    dispatch({\n      type: 'PRODUCT_UPDATE_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'PRODUCT_UPDATE_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const resetProduct = () => dispatch => {\n  dispatch({\n    type: 'PRODUCT_UPDATE_RESET'\n  });\n};","map":{"version":3,"sources":["C:/Users/21620/Desktop/Sports t-shirts/frontend/src/store/product-update/actions.js"],"names":["axios","PATH","updateProduct","productData","dispatch","getState","userApp","user","config","headers","Authorization","token","type","data","put","_id","payload","error","response","message","resetProduct"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,IAAI,GAAG,eAAb;AAEA,OAAO,MAAMC,aAAa,GAAIC,WAAD,IAAiB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC1E,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AADL,MAEFF,QAAQ,EAFZ;AAGA,QAAMG,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASH,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEI,KAAM;AAF9B;AADI,GAAf;;AAMA,MAAI;AACFP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,GAAN,CACpB,GAAEb,IAAK,IAAGE,WAAW,CAACY,GAAI,EADN,EAErBZ,WAFqB,EAGrBK,MAHqB,CAAvB;AAKAJ,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,wBAAR;AAAkCI,MAAAA,OAAO,EAAEH;AAA3C,KAAD,CAAR;AACD,GARD,CAQE,OAAOI,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,qBADC;AAEPI,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA3BM;AA6BP,OAAO,MAAMC,YAAY,GAAG,MAAOhB,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACD,CAFM","sourcesContent":["import axios from 'axios';\nconst PATH = '/api/products';\n\nexport const updateProduct = (productData) => async (dispatch, getState) => {\n  const {\n    userApp: { user },\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user?.token}`,\n    },\n  };\n  try {\n    dispatch({ type: 'PRODUCT_UPDATE_REQUEST' });\n    const { data } = await axios.put(\n      `${PATH}/${productData._id}`,\n      productData,\n      config\n    );\n    dispatch({ type: 'PRODUCT_UPDATE_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'PRODUCT_UPDATE_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const resetProduct = () => (dispatch) => {\n  dispatch({ type: 'PRODUCT_UPDATE_RESET' });\n};\n"]},"metadata":{},"sourceType":"module"}