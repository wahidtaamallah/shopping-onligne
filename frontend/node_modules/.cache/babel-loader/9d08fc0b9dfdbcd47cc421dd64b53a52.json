{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21620\\\\Desktop\\\\Sports t-shirts\\\\frontend\\\\src\\\\components\\\\pages\\\\admin\\\\product-edit\\\\ProductEdit.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { loadProduct } from 'store/product/actions';\nimport { updateProduct, resetProduct } from 'store/product-update/actions';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Spinner, Error } from 'components/shared';\n\nconst ProductEdit = ({\n  user,\n  history,\n  match,\n  loadProduct,\n  product,\n  loading,\n  error,\n  updateProduct,\n  resetProduct,\n  successProductUpdate,\n  loadingProductUpdate,\n  errorProductUpdate\n}) => {\n  const productId = match.params.id;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [price, setPrice] = useState(0);\n  const [inStock, setInStock] = useState(false);\n  const [countInStock, setCountInStock] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [uploading, setUploading] = useState();\n  useEffect(() => {\n    if (successProductUpdate) {\n      resetProduct();\n      history.push('/admin/productlist');\n    } else {\n      if (!product.title || product._id !== productId) loadProduct(productId);else {\n        setTitle(product.title);\n        setDescription(product.description);\n        setCategory(product.category);\n        setPrice(product.price);\n        setInStock(product.inStock);\n        setCountInStock(product.countInStock);\n        setImage(product.image);\n        setBrand(product.brand);\n      }\n    }\n  }, [product, productId, loadProduct, successProductUpdate, history, resetProduct]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    updateProduct({\n      _id: productId,\n      title,\n      description,\n      category,\n      price,\n      inStock,\n      countInStock,\n      image,\n      brand\n    });\n  };\n\n  const onUploadFile = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"userEdit_nav\",\n    onClick: () => history.push('/admin/productlist'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"\\u2190 Back to Products\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth__container center__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Product Details\"), loadingProductUpdate && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 34\n    }\n  }), errorProductUpdate && /*#__PURE__*/React.createElement(Error, {\n    error: errorProductUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 32\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"8\",\n    name: \"description\",\n    type: \"text\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"category\",\n    type: \"text\",\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"price\",\n    min: \"0\",\n    step: \"0.01\",\n    type: \"number\",\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"In Stock\"), /*#__PURE__*/React.createElement(Checkbox, {\n    checked: inStock,\n    color: \"default\",\n    onChange: event => setInStock(event.target.checked),\n    inputProps: {\n      'aria-label': 'checkbox with default color'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Count in Stock\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"countInStock\",\n    min: \"0\",\n    type: \"number\",\n    value: countInStock,\n    onChange: e => setCountInStock(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"image\",\n    type: \"text\",\n    value: image,\n    onChange: e => setImage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"image-file\",\n    label: \"Choose file\",\n    onChange: onUploadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }), uploading && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Brand\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"brand\",\n    type: \"text\",\n    value: brand,\n    onChange: e => setBrand(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"auth__signInButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"Update\"))));\n};\n\nconst mapStateToProps = state => ({\n  user: state.userApp.user,\n  product: state.mainApp.product,\n  loading: state.mainApp.loading,\n  error: state.mainApp.error,\n  successProductUpdate: state.productUpdateApp.success,\n  loadingProductUpdate: state.productUpdateApp.loading,\n  errorProductUpdate: state.productUpdateApp.error\n});\n\nconst mapDispatchToProps = {\n  loadProduct,\n  updateProduct,\n  resetProduct\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductEdit);","map":{"version":3,"sources":["C:/Users/21620/Desktop/Sports t-shirts/frontend/src/components/pages/admin/product-edit/ProductEdit.jsx"],"names":["React","useState","useEffect","axios","connect","loadProduct","updateProduct","resetProduct","Checkbox","Spinner","Error","ProductEdit","user","history","match","product","loading","error","successProductUpdate","loadingProductUpdate","errorProductUpdate","productId","params","id","title","setTitle","description","setDescription","category","setCategory","price","setPrice","inStock","setInStock","countInStock","setCountInStock","image","setImage","brand","setBrand","uploading","setUploading","push","_id","onSubmit","e","preventDefault","onUploadFile","file","target","files","formData","FormData","append","config","headers","data","post","console","value","event","checked","mapStateToProps","state","userApp","mainApp","productUpdateApp","success","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { connect } from 'react-redux';\nimport { loadProduct } from 'store/product/actions';\nimport { updateProduct, resetProduct } from 'store/product-update/actions';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Spinner, Error } from 'components/shared';\n\nconst ProductEdit = ({\n  user,\n  history,\n  match,\n  loadProduct,\n  product,\n  loading,\n  error,\n  updateProduct,\n  resetProduct,\n  successProductUpdate,\n  loadingProductUpdate,\n  errorProductUpdate,\n}) => {\n  const productId = match.params.id;\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [price, setPrice] = useState(0);\n  const [inStock, setInStock] = useState(false);\n  const [countInStock, setCountInStock] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n\n  const [uploading, setUploading] = useState();\n\n  useEffect(() => {\n    if (successProductUpdate) {\n      resetProduct();\n      history.push('/admin/productlist');\n    } else {\n      if (!product.title || product._id !== productId) loadProduct(productId);\n      else {\n        setTitle(product.title);\n        setDescription(product.description);\n        setCategory(product.category);\n        setPrice(product.price);\n        setInStock(product.inStock);\n        setCountInStock(product.countInStock);\n        setImage(product.image);\n        setBrand(product.brand);\n      }\n    }\n  }, [\n    product,\n    productId,\n    loadProduct,\n    successProductUpdate,\n    history,\n    resetProduct,\n  ]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    updateProduct({\n      _id: productId,\n      title,\n      description,\n      category,\n      price,\n      inStock,\n      countInStock,\n      image,\n      brand,\n    });\n  };\n\n  const onUploadFile = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n    try {\n      const config = { headers: { 'Content-Type': 'multipart/form-data' } };\n      const { data } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  return (\n    <>\n      <p\n        className='userEdit_nav'\n        onClick={() => history.push('/admin/productlist')}\n      >\n        &#8592; Back to Products\n      </p>\n      <div className='auth__container center__container'>\n        <h1>Product Details</h1>\n        {loadingProductUpdate && <Spinner />}\n        {errorProductUpdate && <Error error={errorProductUpdate} />}\n        {loading ? (\n          <Spinner />\n        ) : error ? (\n          <Error error={error} />\n        ) : (\n          <form onSubmit={onSubmit}>\n            <h5>Title</h5>\n            <input\n              name='title'\n              type='text'\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <h5>Description</h5>\n            <textarea\n              rows='8'\n              name='description'\n              type='text'\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            <h5>Category</h5>\n            <input\n              name='category'\n              type='text'\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            />\n            <h5>Price</h5>\n            <input\n              name='price'\n              min='0'\n              step='0.01'\n              type='number'\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n            />\n            <div className='checkbox'>\n              <h5>In Stock</h5>\n              <Checkbox\n                checked={inStock}\n                color='default'\n                onChange={(event) => setInStock(event.target.checked)}\n                inputProps={{ 'aria-label': 'checkbox with default color' }}\n              />\n            </div>\n            <h5>Count in Stock</h5>\n            <input\n              name='countInStock'\n              min='0'\n              type='number'\n              value={countInStock}\n              onChange={(e) => setCountInStock(e.target.value)}\n            />\n            <h5>Image</h5>\n            <input\n              name='image'\n              type='text'\n              value={image}\n              onChange={(e) => setImage(e.target.value)}\n            />\n            <input\n              type='file'\n              id='image-file'\n              label='Choose file'\n              onChange={onUploadFile}\n            />\n            {uploading && <Spinner />}\n            <h5>Brand</h5>\n            <input\n              name='brand'\n              type='text'\n              value={brand}\n              onChange={(e) => setBrand(e.target.value)}\n            />\n            <button type='submit' className='auth__signInButton'>\n              Update\n            </button>\n          </form>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.userApp.user,\n  product: state.mainApp.product,\n  loading: state.mainApp.loading,\n  error: state.mainApp.error,\n  successProductUpdate: state.productUpdateApp.success,\n  loadingProductUpdate: state.productUpdateApp.loading,\n  errorProductUpdate: state.productUpdateApp.error,\n});\nconst mapDispatchToProps = {\n  loadProduct,\n  updateProduct,\n  resetProduct,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductEdit);\n"]},"metadata":{},"sourceType":"module"}