{"ast":null,"code":"import axios from 'axios';\nconst PATH = '/api/users';\nexport const updateUser = userData => async (dispatch, getState) => {\n  const {\n    userApp: {\n      user\n    }\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user === null || user === void 0 ? void 0 : user.token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: 'USER_UPDATE_REQUEST'\n    });\n    const {\n      data\n    } = await axios.put(`${PATH}/${userData._id}`, userData, config);\n    dispatch({\n      type: 'USER_UPDATE_SUCCESS'\n    });\n    dispatch({\n      type: 'USER_DETAILS_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'USER_UPDATE_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const resetUser = () => dispatch => {\n  dispatch({\n    type: 'USER_UPDATE_RESET'\n  });\n};","map":{"version":3,"sources":["C:/Users/21620/Desktop/Sports t-shirts/frontend/src/store/user-update/actions.js"],"names":["axios","PATH","updateUser","userData","dispatch","getState","userApp","user","config","headers","Authorization","token","type","data","put","_id","payload","error","response","message","resetUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,IAAI,GAAG,YAAb;AAEA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AADL,MAEFF,QAAQ,EAFZ;AAGA,QAAMG,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASH,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEI,KAAM;AAF9B;AADI,GAAf;;AAMA,MAAI;AACFP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,GAAN,CACpB,GAAEb,IAAK,IAAGE,QAAQ,CAACY,GAAI,EADH,EAErBZ,QAFqB,EAGrBK,MAHqB,CAAvB;AAKAJ,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAR,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,sBAAR;AAAgCI,MAAAA,OAAO,EAAEH;AAAzC,KAAD,CAAR;AACD,GATD,CASE,OAAOI,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,kBADC;AAEPI,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA5BM;AA8BP,OAAO,MAAMC,SAAS,GAAG,MAAOhB,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACD,CAFM","sourcesContent":["import axios from 'axios';\nconst PATH = '/api/users';\n\nexport const updateUser = (userData) => async (dispatch, getState) => {\n  const {\n    userApp: { user },\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user?.token}`,\n    },\n  };\n  try {\n    dispatch({ type: 'USER_UPDATE_REQUEST' });\n    const { data } = await axios.put(\n      `${PATH}/${userData._id}`,\n      userData,\n      config\n    );\n    dispatch({ type: 'USER_UPDATE_SUCCESS' });\n    dispatch({ type: 'USER_DETAILS_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'USER_UPDATE_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const resetUser = () => (dispatch) => {\n  dispatch({ type: 'USER_UPDATE_RESET' });\n};\n"]},"metadata":{},"sourceType":"module"}