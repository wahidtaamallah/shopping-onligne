{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21620\\\\Desktop\\\\Sports t-shirts\\\\frontend\\\\src\\\\components\\\\pages\\\\admin\\\\user-edit\\\\UserEdit.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserProfile } from 'store/user/actions';\nimport { updateUser, resetUser } from 'store/user-update/actions';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Spinner, Error } from 'components/shared';\n\nconst UserEdit = ({\n  history,\n  match,\n  getUserProfile,\n  profile,\n  loading,\n  error,\n  updateUser,\n  resetUser,\n  successUserUpdate,\n  loadingUserUpdate,\n  errorUserUpdate\n}) => {\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    if (successUserUpdate) {\n      resetUser();\n      history.push('/admin/userlist');\n    } else {\n      if (!profile.name || profile._id !== userId) getUserProfile(userId);else {\n        setName(profile.name);\n        setEmail(profile.email);\n        setIsAdmin(profile.isAdmin);\n      }\n    }\n\n    return () => {\n      resetUser();\n    };\n  }, [profile, userId, getUserProfile, successUserUpdate, history, resetUser]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    updateUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"userEdit_nav\",\n    onClick: () => history.push('/admin/userlist'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"\\u2190 Back to Users\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth__container center__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"User Details\"), loadingUserUpdate && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 31\n    }\n  }), errorUserUpdate && /*#__PURE__*/React.createElement(Error, {\n    error: errorUserUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Is Admin\"), /*#__PURE__*/React.createElement(Checkbox, {\n    checked: isAdmin,\n    color: \"default\",\n    onChange: event => setIsAdmin(event.target.checked),\n    inputProps: {\n      'aria-label': 'checkbox with default color'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"auth__signInButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Update\"))));\n};\n\nconst mapStateToProps = state => ({\n  profile: state.userApp.profile,\n  loading: state.userApp.loading,\n  error: state.userApp.error,\n  successUserUpdate: state.userUpdateApp.success,\n  loadingUserUpdate: state.userUpdateApp.loading,\n  errorUserUpdate: state.userUpdateApp.error\n});\n\nconst mapDispatchToProps = {\n  getUserProfile,\n  updateUser,\n  resetUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEdit);","map":{"version":3,"sources":["C:/Users/21620/Desktop/Sports t-shirts/frontend/src/components/pages/admin/user-edit/UserEdit.jsx"],"names":["React","useState","useEffect","connect","getUserProfile","updateUser","resetUser","Checkbox","Spinner","Error","UserEdit","history","match","profile","loading","error","successUserUpdate","loadingUserUpdate","errorUserUpdate","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","push","_id","onSubmit","e","preventDefault","target","value","event","checked","mapStateToProps","state","userApp","userUpdateApp","success","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserProfile } from 'store/user/actions';\nimport { updateUser, resetUser } from 'store/user-update/actions';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Spinner, Error } from 'components/shared';\n\nconst UserEdit = ({\n  history,\n  match,\n  getUserProfile,\n  profile,\n  loading,\n  error,\n  updateUser,\n  resetUser,\n  successUserUpdate,\n  loadingUserUpdate,\n  errorUserUpdate,\n}) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  useEffect(() => {\n    if (successUserUpdate) {\n      resetUser();\n      history.push('/admin/userlist');\n    } else {\n      if (!profile.name || profile._id !== userId) getUserProfile(userId);\n      else {\n        setName(profile.name);\n        setEmail(profile.email);\n        setIsAdmin(profile.isAdmin);\n      }\n    }\n    return () => {\n      resetUser();\n    };\n  }, [profile, userId, getUserProfile, successUserUpdate, history, resetUser]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    updateUser({ _id: userId, name, email, isAdmin });\n  };\n\n  return (\n    <>\n      <p\n        className='userEdit_nav'\n        onClick={() => history.push('/admin/userlist')}\n      >\n        &#8592; Back to Users\n      </p>\n      <div className='auth__container center__container'>\n        <h1>User Details</h1>\n        {loadingUserUpdate && <Spinner />}\n        {errorUserUpdate && <Error error={errorUserUpdate} />}\n        {loading ? (\n          <Spinner />\n        ) : error ? (\n          <Error error={error} />\n        ) : (\n          <form onSubmit={onSubmit}>\n            <h5>Username</h5>\n            <input\n              name='username'\n              type='text'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            <h5>Email</h5>\n            <input\n              name='email'\n              type='email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <div className='checkbox'>\n              <h5>Is Admin</h5>\n              <Checkbox\n                checked={isAdmin}\n                color='default'\n                onChange={(event) => setIsAdmin(event.target.checked)}\n                inputProps={{ 'aria-label': 'checkbox with default color' }}\n              />\n            </div>\n\n            <button type='submit' className='auth__signInButton'>\n              Update\n            </button>\n          </form>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.userApp.profile,\n  loading: state.userApp.loading,\n  error: state.userApp.error,\n  successUserUpdate: state.userUpdateApp.success,\n  loadingUserUpdate: state.userUpdateApp.loading,\n  errorUserUpdate: state.userUpdateApp.error,\n});\nconst mapDispatchToProps = {\n  getUserProfile,\n  updateUser,\n  resetUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserEdit);\n"]},"metadata":{},"sourceType":"module"}