{"ast":null,"code":"import axios from 'axios';\nconst PATH = '/api/orders';\nexport const createOrder = order => async (dispatch, getState) => {\n  const {\n    userApp: {\n      user\n    }\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user.token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: 'ORDER_CREATE_REQUEST'\n    });\n    const {\n      data\n    } = await axios.post(`${PATH}`, order, config);\n    dispatch({\n      type: 'ORDER_CREATE_SUCCESS',\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: 'ORDER_CREATE_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  const {\n    userApp: {\n      user\n    }\n  } = getState();\n  const config = {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  };\n\n  try {\n    dispatch({\n      type: 'ORDER_DETAILS_REQUEST'\n    });\n    const {\n      data\n    } = await axios.get(`${PATH}/${id}`, config);\n    dispatch({\n      type: 'ORDER_DETAILS_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ORDER_DETAILS_FAIL',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/21620/Desktop/Sports t-shirts/frontend/src/store/order/actions.js"],"names":["axios","PATH","createOrder","order","dispatch","getState","userApp","user","config","headers","Authorization","token","type","data","post","payload","localStorage","removeItem","error","response","message","getOrderDetails","id","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,IAAI,GAAG,aAAb;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClE,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AADL,MAEFF,QAAQ,EAFZ;AAGA,QAAMG,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASH,IAAI,CAACI,KAAM;AAF7B;AADI,GAAf;;AAMA,MAAI;AACFP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,IAAN,CAAY,GAAEb,IAAK,EAAnB,EAAsBE,KAAtB,EAA6BK,MAA7B,CAAvB;AACAJ,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,sBAAR;AAAgCG,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdd,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,mBADC;AAEPG,MAAAA,OAAO,EACLG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAxBM;AA0BP,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,OAAOlB,QAAP,EAAiBC,QAAjB,KAA8B;AACnE,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF;AADL,MAEFF,QAAQ,EAFZ;AAGA,QAAMG,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,IAAI,CAACI,KAAM;AAD7B;AADI,GAAf;;AAKA,MAAI;AACFP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACuB,GAAN,CAAW,GAAEtB,IAAK,IAAGqB,EAAG,EAAxB,EAA2Bd,MAA3B,CAAvB;AACAJ,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,uBAAR;AAAiCG,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACD,GAJD,CAIE,OAAOK,KAAP,EAAc;AACdd,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAE,oBADC;AAEPG,MAAAA,OAAO,EACLG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAtBM","sourcesContent":["import axios from 'axios';\nconst PATH = '/api/orders';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  const {\n    userApp: { user },\n  } = getState();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${user.token}`,\n    },\n  };\n  try {\n    dispatch({ type: 'ORDER_CREATE_REQUEST' });\n    const { data } = await axios.post(`${PATH}`, order, config);\n    dispatch({ type: 'ORDER_CREATE_SUCCESS', payload: data });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: 'ORDER_CREATE_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  const {\n    userApp: { user },\n  } = getState();\n  const config = {\n    headers: {\n      Authorization: `Bearer ${user.token}`,\n    },\n  };\n  try {\n    dispatch({ type: 'ORDER_DETAILS_REQUEST' });\n    const { data } = await axios.get(`${PATH}/${id}`, config);\n    dispatch({ type: 'ORDER_DETAILS_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'ORDER_DETAILS_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}